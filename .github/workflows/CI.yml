# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  [push]

  # Allows you to run this workflow manually from the Actions tab

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Build
        run: sudo ./build.sh

      # Runs a set of commands using the runners shell
      - name: print sha256sum
        run: cat output/sha256
        
      - name: Generate Tag
        id: tag
        run: |
          VER=$(egrep ^KERNEL_VERSION build.sh|cut -d= -f2)
          echo Version is $VER
          echo "::set-output name=tag::${VER}"
        
      - name: Upload iso artifact part 1
        uses: actions/upload-artifact@v2
        with:
          name: mbp-ubuntu-${{ steps.tag.outputs.tag }}.z01
          path: ${{ github.workspace }}/output/livecd-${{ steps.tag.outputs.tag }}-mbp.z01
          
      - name: Upload iso artifact part 2
        uses: actions/upload-artifact@v2
        with:
          name: mbp-ubuntu-${{ steps.tag.outputs.tag }}.z02
          path: ${{ github.workspace }}/output/livecd-${{ steps.tag.outputs.tag }}-mbp.z02
          
      - name: Upload iso artifact part 3
        uses: actions/upload-artifact@v2
        with:
          name: mbp-ubuntu-${{ steps.tag.outputs.tag }}.z03
          path: ${{ github.workspace }}/output/livecd-${{ steps.tag.outputs.tag }}-mbp.z03
          
      - name: Upload iso artifact part 4
        uses: actions/upload-artifact@v2
        with:
          name: mbp-ubuntu-${{ steps.tag.outputs.tag }}.zip
          path: ${{ github.workspace }}/output/livecd-${{ steps.tag.outputs.tag }}-mbp.zip

      - name: Instructions for putting it back together
        run: |
          echo Download all the artifacts, and put them in a folder without other files. Then run:
          echo "for i in *; do file $i; done"
          echo "cat livecd-${{ steps.tag.outputs.tag }}-mbp.z01 livecd-${{ steps.tag.outputs.tag }}-mbp.z02 livecd-${{ steps.tag.outputs.tag }}-mbp.z03 livecd-${{ steps.tag.outputs.tag }}-mbp.zip > cd.zip"
          echo unzip cd.zip
          
